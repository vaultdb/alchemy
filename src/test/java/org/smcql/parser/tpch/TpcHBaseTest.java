package org.smcql.parser.tpch;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.apache.calcite.rel.RelNode;
import org.smcql.BaseTest;
import org.smcql.config.SystemConfiguration;
import org.smcql.parser.SqlStatementParser;
import org.smcql.util.Utilities;

import com.google.common.collect.ImmutableList;

public class TpcHBaseTest extends BaseTest {

	
	protected static final List<String> QUERIES = ImmutableList.of(
		      // 01
		      "select\n"
		          + "  l_returnflag,\n"
		          + "  l_linestatus,\n"
		          + "  sum(l_quantity) as sum_qty,\n"
		          + "  sum(l_extendedprice) as sum_base_price,\n"
		          + "  sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,\n"
		          + "  sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,\n"
		          + "  avg(l_quantity) as avg_qty,\n"
		          + "  avg(l_extendedprice) as avg_price,\n"
		          + "  avg(l_discount) as avg_disc,\n"
		          + "  count(*) as count_order\n"
		          + "from\n"
		          + "  lineitem\n"
		          + " where\n"
		          + "  l_shipdate <= date '1998-12-01' - interval '120' day (3)\n"
		          + "group by\n"
		          + "  l_returnflag,\n"
		          + "  l_linestatus\n"
		          + "\n"
		          + "order by\n"
		          + "  l_returnflag,\n"
		          + "  l_linestatus",

		      // 02
		      "WITH min_ps_supplycost AS ("
	          + "    select\n"
	          + "      ps.ps_partkey,min(ps.ps_supplycost) min_cost\n"
	          + "\n"
	          + "    from\n"
	          + "      partsupp ps,\n"
	          + "      supplier s,\n"
	          + "      nation n,\n"
	          + "      region r\n"
	          + "    where\n"
	          + "      s.s_suppkey = ps.ps_suppkey\n"
	          + "      and s.s_nationkey = n.n_nationkey\n"
	          + "      and n.n_regionkey = r.r_regionkey\n"
	          + "      and r.r_name = 'EUROPE'\n"
	          + "    GROUP BY ps.ps_partkey"
	          + "  )\n"
		      + "select\n"
		          + "  s.s_acctbal,\n"
		          + "  s.s_name,\n"
		          + "  n.n_name,\n"
		          + "  p.p_partkey,\n"
		          + "  p.p_mfgr,\n"
		          + "  s.s_address,\n"
		          + "  s.s_phone,\n"
		          + "  s.s_comment\n"
		          + "from\n"
		          + "  part p,\n"
		          + "  supplier s,\n"
		          + "  partsupp ps,\n"
		          + "  nation n,\n"
		          + "  region r,\n"
		          + "  min_ps_supplycost mps\n"
		          + "where\n"
		          + "  p.p_partkey = ps.ps_partkey\n"
		          + "  and s.s_suppkey = ps.ps_suppkey\n"
		          + "  and p.p_size = 41\n"
		          + "  and p.p_type like '%NICKEL'\n"
		          + "  and s.s_nationkey = n.n_nationkey\n"
		          + "  and n.n_regionkey = r.r_regionkey\n"
		          + "  and r.r_name = 'EUROPE'\n"
		          + "  and mps.ps_partkey = ps.ps_partkey\n"
		          + "  and ps.ps_supplycost = mps.min_cost\n"
		          + "\n"
		          + "order by\n"
		          + "  s.s_acctbal desc,\n"
		          + "  n.n_name,\n"
		          + "  s.s_name,\n"
		          + "  p.p_partkey\n"
		          + "limit 100",

		      // 03
		      "select\n"
		          + "  l.l_orderkey,\n"
		          + "  sum(l.l_extendedprice * (1 - l.l_discount)) as revenue,\n"
		          + "  o.o_orderdate,\n"
		          + "  o.o_shippriority\n"
		          + "\n"
		          + "from\n"
		          + "  customer c,\n"
		          + "  orders o,\n"
		          + "  lineitem l\n"
		          + "\n"
		          + "where\n"
		          + "  c.c_mktsegment = 'HOUSEHOLD'\n"
		          + "  and c.c_custkey = o.o_custkey\n"
		          + "  and l.l_orderkey = o.o_orderkey\n"
		          + "  and o.o_orderdate < date '1995-03-25'\n"
		          + "  and l.l_shipdate > date '1995-03-25'\n"
		          + "\n"
		          + "group by\n"
		          + "  l.l_orderkey,\n"
		          + "  o.o_orderdate,\n"
		          + "  o.o_shippriority\n"
		          + "order by\n"
		          + "  revenue desc,\n"
		          + "  o.o_orderdate\n"
		          + "limit 10",

		      // 04
		      "select\n"
		          + "  o_orderpriority,\n"
		          + "  count(*) as order_count\n"
		          + "from\n"
		          + "  orders\n"
		          + "\n"
		          + "where\n"
		          + "  o_orderdate >= date '1996-10-01'\n"
		          + "  and o_orderdate < date '1996-10-01' + interval '3' month\n"
		          + "  and \n"
		          + "  exists (\n"
		          + "    select\n"
		          + "      *\n"
		          + "    from\n"
		          + "      lineitem\n"
		          + "    where\n"
		          + "      l_orderkey = o_orderkey\n"
		          + "      and l_commitdate < l_receiptdate\n"
		          + "  )\n"
		          + "group by\n"
		          + "  o_orderpriority\n"
		          + "order by\n"
		          + "  o_orderpriority",

		      // 05
		      "select\n"
		          + "  n.n_name,\n"
		          + "  sum(l.l_extendedprice * (1 - l.l_discount)) as revenue\n"
		          + "\n"
		          + "from\n"
		          + "  customer c,\n"
		          + "  orders o,\n"
		          + "  lineitem l,\n"
		          + "  supplier s,\n"
		          + "  nation n,\n"
		          + "  region r\n"
		          + "\n"
		          + "where\n"
		          + "  c.c_custkey = o.o_custkey\n"
		          + "  and l.l_orderkey = o.o_orderkey\n"
		          + "  and l.l_suppkey = s.s_suppkey\n"
		          + "  and c.c_nationkey = s.s_nationkey\n"
		          + "  and s.s_nationkey = n.n_nationkey\n"
		          + "  and n.n_regionkey = r.r_regionkey\n"
		          + "  and r.r_name = 'EUROPE'\n"
		          + "  and o.o_orderdate >= date '1997-01-01'\n"
		          + "  and o.o_orderdate < date '1997-01-01' + interval '1' year\n"
		          + "group by\n"
		          + "  n.n_name\n"
		          + "\n"
		          + "order by\n"
		          + "  revenue desc",

		      // 06
		      "select\n"
		          + "  sum(l_extendedprice * l_discount) as revenue\n"
		          + "from\n"
		          + "  lineitem\n"
		          + "where\n"
		          + "  l_shipdate >= date '1997-01-01'\n"
		          + "  and l_shipdate < date '1997-01-01' + interval '1' year\n"
		          + "  and\n"
		          + "  l_discount between 0.03 - 0.01 and 0.03 + 0.01\n"
		          + "  and l_quantity < 24",

		      // 07
		      "select\n"
		          + "  supp_nation,\n"
		          + "  cust_nation,\n"
		          + "  l_year,\n"
		          + "  sum(volume) as revenue\n"
		          + "from\n"
		          + "  (\n"
		          + "    select\n"
		          + "      n1.n_name as supp_nation,\n"
		          + "      n2.n_name as cust_nation,\n"
		          + "      extract(year from l.l_shipdate) as l_year,\n"
		          + "      l.l_extendedprice * (1 - l.l_discount) as volume\n"
		          + "    from\n"
		          + "      supplier s,\n"
		          + "      lineitem l,\n"
		          + "      orders o,\n"
		          + "      customer c,\n"
		          + "      nation n1,\n"
		          + "      nation n2\n"
		          + "    where\n"
		          + "      s.s_suppkey = l.l_suppkey\n"
		          + "      and o.o_orderkey = l.l_orderkey\n"
		          + "      and c.c_custkey = o.o_custkey\n"
		          + "      and s.s_nationkey = n1.n_nationkey\n"
		          + "      and c.c_nationkey = n2.n_nationkey\n"
		          + "      and (\n"
		          + "        (n1.n_name = 'EGYPT' and n2.n_name = 'UNITED STATES')\n"
		          + "        or (n1.n_name = 'UNITED STATES' and n2.n_name = 'EGYPT')\n"
		          + "      )\n"
		          + "      and l.l_shipdate between date '1995-01-01' and date '1996-12-31'\n"
		          + "  ) as shipping\n"
		          + "group by\n"
		          + "  supp_nation,\n"
		          + "  cust_nation,\n"
		          + "  l_year\n"
		          + "order by\n"
		          + "  supp_nation,\n"
		          + "  cust_nation,\n"
		          + "  l_year",

		      // 08
		      "select\n"
		          + "  o_year,\n"
		          + "  sum(case\n"
		          + "    when nation = 'EGYPT' then volume\n"
		          + "    else 0\n"
		          + "  end) / sum(volume) as mkt_share\n"
		          + "from\n"
		          + "  (\n"
		          + "    select\n"
		          + "      extract(year from o.o_orderdate) as o_year,\n"
		          + "      l.l_extendedprice * (1 - l.l_discount) as volume,\n"
		          + "      n2.n_name as nation\n"
		          + "    from\n"
		          + "      part p,\n"
		          + "      supplier s,\n"
		          + "      lineitem l,\n"
		          + "      orders o,\n"
		          + "      customer c,\n"
		          + "      nation n1,\n"
		          + "      nation n2,\n"
		          + "      region r\n"
		          + "    where\n"
		          + "      p.p_partkey = l.l_partkey\n"
		          + "      and s.s_suppkey = l.l_suppkey\n"
		          + "      and l.l_orderkey = o.o_orderkey\n"
		          + "      and o.o_custkey = c.c_custkey\n"
		          + "      and c.c_nationkey = n1.n_nationkey\n"
		          + "      and n1.n_regionkey = r.r_regionkey\n"
		          + "      and r.r_name = 'MIDDLE EAST'\n"
		          + "      and s.s_nationkey = n2.n_nationkey\n"
		          + "      and o.o_orderdate between date '1995-01-01' and date '1996-12-31'\n"
		          + "      and p.p_type = 'PROMO BRUSHED COPPER'\n"
		          + "  ) as all_nations\n"
		          + "group by\n"
		          + "  o_year\n"
		          + "order by\n"
		          + "  o_year",

		      // 09
		      "select\n"
		          + "  nation,\n"
		          + "  o_year,\n"
		          + "  sum(amount) as sum_profit\n"
		          + "from\n"
		          + "  (\n"
		          + "    select\n"
		          + "      n_name as nation,\n"
		          + "      extract(year from o_orderdate) as o_year,\n"
		          + "      l.l_extendedprice * (1 - l.l_discount) - ps.ps_supplycost * l.l_quantity as amount\n"
		          + "    from\n"
		          + "      part p,\n"
		          + "      supplier s,\n"
		          + "      lineitem l,\n"
		          + "      partsupp ps,\n"
		          + "      orders o,\n"
		          + "      nation n\n"
		          + "    where\n"
		          + "      s.s_suppkey = l.l_suppkey\n"
		          + "      and ps.ps_suppkey = l.l_suppkey\n"
		          + "      and ps.ps_partkey = l.l_partkey\n"
		          + "      and p.p_partkey = l.l_partkey\n"
		          + "      and o.o_orderkey = l.l_orderkey\n"
		          + "      and s.s_nationkey = n.n_nationkey\n"
		          + "      and p.p_name like '%yellow%'\n"
		          + "  ) as profit\n"
		          + "group by\n"
		          + "  nation,\n"
		          + "  o_year\n"
		          + "order by\n"
		          + "  nation,\n"
		          + "  o_year desc",

		      // 10
		      "select\n"
		          + "  c.c_custkey,\n"
		          + "  c.c_name,\n"
		          + "  sum(l.l_extendedprice * (1 - l.l_discount)) as revenue,\n"
		          + "  c.c_acctbal,\n"
		          + "  n.n_name,\n"
		          + "  c.c_address,\n"
		          + "  c.c_phone,\n"
		          + "  c.c_comment\n"
		          + "from\n"
		          + "  customer c,\n"
		          + "  orders o,\n"
		          + "  lineitem l,\n"
		          + "  nation n\n"
		          + "where\n"
		          + "  c.c_custkey = o.o_custkey\n"
		          + "  and l.l_orderkey = o.o_orderkey\n"
		          + "  and o.o_orderdate >= date '1994-03-01'\n"
		          + "  and o.o_orderdate < date '1994-03-01' + interval '3' month\n"
		          + "  and l.l_returnflag = 'R'\n"
		          + "  and c.c_nationkey = n.n_nationkey\n"
		          + "group by\n"
		          + "  c.c_custkey,\n"
		          + "  c.c_name,\n"
		          + "  c.c_acctbal,\n"
		          + "  c.c_phone,\n"
		          + "  n.n_name,\n"
		          + "  c.c_address,\n"
		          + "  c.c_comment\n"
		          + "order by\n"
		          + "  revenue desc\n"
		          + "limit 20",

		      // 11
		      "select\n"
		          + "  ps.ps_partkey,\n"
		          + "  sum(ps.ps_supplycost * ps.ps_availqty) as val\n"
		          + "from\n"
		          + "  partsupp ps,\n"
		          + "  supplier s,\n"
		          + "  nation n\n"
		          + "where\n"
		          + "  ps.ps_suppkey = s.s_suppkey\n"
		          + "  and s.s_nationkey = n.n_nationkey\n"
		          + "  and n.n_name = 'JAPAN'\n"
		          + "group by\n"
		          + "  ps.ps_partkey having\n"
		          + "    sum(ps.ps_supplycost * ps.ps_availqty) > (\n"
		          + "      select\n"
		          + "        sum(ps.ps_supplycost * ps.ps_availqty) * 0.0001000000\n"
		          + "      from\n"
		          + "        partsupp ps,\n"
		          + "        supplier s,\n"
		          + "        nation n\n"
		          + "      where\n"
		          + "        ps.ps_suppkey = s.s_suppkey\n"
		          + "        and s.s_nationkey = n.n_nationkey\n"
		          + "        and n.n_name = 'JAPAN'\n"
		          + "    )\n"
		          + "order by\n"
		          + "  val desc",

		      // 12
		      "select\n"
		          + "  l.l_shipmode,\n"
		          + "  sum(case\n"
		          + "    when o.o_orderpriority = '1-URGENT'\n"
		          + "      or o.o_orderpriority = '2-HIGH'\n"
		          + "      then 1\n"
		          + "    else 0\n"
		          + "  end) as high_line_count,\n"
		          + "  sum(case\n"
		          + "    when o.o_orderpriority <> '1-URGENT'\n"
		          + "      and o.o_orderpriority <> '2-HIGH'\n"
		          + "      then 1\n"
		          + "    else 0\n"
		          + "  end) as low_line_count\n"
		          + "from\n"
		          + "  orders o,\n"
		          + "  lineitem l\n"
		          + "where\n"
		          + "  o.o_orderkey = l.l_orderkey\n"
		          + "  and l.l_shipmode in ('TRUCK', 'REG AIR')\n"
		          + "  and l.l_commitdate < l.l_receiptdate\n"
		          + "  and l.l_shipdate < l.l_commitdate\n"
		          + "  and l.l_receiptdate >= date '1994-01-01'\n"
		          + "  and l.l_receiptdate < date '1994-01-01' + interval '1' year\n"
		          + "group by\n"
		          + "  l.l_shipmode\n"
		          + "order by\n"
		          + "  l.l_shipmode",

		      // 13
		      "select\n"
		          + "  c_count,\n"
		          + "  count(*) as custdist\n"
		          + "from\n"
		          + "  (\n"
		          + "    select\n"
		          + "      c.c_custkey,\n"
		          + "      count(o.o_orderkey)\n"
		          + "    from\n"
		          + "      customer c \n"
		          + "      left outer join orders o \n"
		          + "        on c.c_custkey = o.o_custkey\n"
		          + "        and o.o_comment not like '%special%requests%'\n"
		          + "    group by\n"
		          + "      c.c_custkey\n"
		          + "  ) as orders (c_custkey, c_count)\n"
		          + "group by\n"
		          + "  c_count\n"
		          + "order by\n"
		          + "  custdist desc,\n"
		          + "  c_count desc",

		      // 14
		      "select\n"
		          + "  100.00 * sum(case\n"
		          + "    when p.p_type like 'PROMO%'\n"
		          + "      then l.l_extendedprice * (1 - l.l_discount)\n"
		          + "    else 0\n"
		          + "  end) / sum(l.l_extendedprice * (1 - l.l_discount)) as promo_revenue\n"
		          + "from\n"
		          + "  lineitem l,\n"
		          + "  part p\n"
		          + "where\n"
		          + "  l.l_partkey = p.p_partkey\n"
		          + "  and l.l_shipdate >= date '1994-08-01'\n"
		          + "  and l.l_shipdate < date '1994-08-01' + interval '1' month",

		      // 15
		      "with revenue0 (supplier_no, total_revenue) as (\n"
		          + "  select\n"
		          + "    l_suppkey,\n"
		          + "    sum(l_extendedprice * (1 - l_discount))\n"
		          + "  from\n"
		          + "    lineitem\n"
		          + "  where\n"
		          + "    l_shipdate >= date '1993-05-01'\n"
		          + "    and l_shipdate < date '1993-05-01' + interval '3' month\n"
		          + "  group by\n"
		          + "    l_suppkey)\n"
		          + "select\n"
		          + "  s.s_suppkey,\n"
		          + "  s.s_name,\n"
		          + "  s.s_address,\n"
		          + "  s.s_phone,\n"
		          + "  r.total_revenue\n"
		          + "from\n"
		          + "  supplier s,\n"
		          + "  revenue0 r\n"
		          + "where\n"
		          + "  s.s_suppkey = r.supplier_no\n"
		          + "  and r.total_revenue = (\n"
		          + "    select\n"
		          + "      max(total_revenue)\n"
		          + "    from\n"
		          + "      revenue0\n"
		          + "  )\n"
		          + "order by\n"
		          + "  s.s_suppkey",

		      // 16
		      "select\n"
		          + "  p.p_brand,\n"
		          + "  p.p_type,\n"
		          + "  p.p_size,\n"
		          + "  count(distinct ps.ps_suppkey) as supplier_cnt\n"
		          + "from\n"
		          + "  partsupp ps,\n"
		          + "  part p\n"
		          + "where\n"
		          + "  p.p_partkey = ps.ps_partkey\n"
		          + "  and p.p_brand <> 'Brand#21'\n"
		          + "  and p.p_type not like 'MEDIUM PLATED%'\n"
		          + "  and p.p_size in (38, 2, 8, 31, 44, 5, 14, 24)\n"
		          + "  and ps.ps_suppkey not in (\n"
		          + "    select\n"
		          + "      s_suppkey\n"
		          + "    from\n"
		          + "      supplier\n"
		          + "    where\n"
		          + "      s_comment like '%Customer%Complaints%'\n"
		          + "  )\n"
		          + "group by\n"
		          + "  p.p_brand,\n"
		          + "  p.p_type,\n"
		          + "  p.p_size\n"
		          + "order by\n"
		          + "  supplier_cnt desc,\n"
		          + "  p.p_brand,\n"
		          + "  p.p_type,\n"
		          + "  p.p_size",

		      // 17
		      "select\n"
		          + "  sum(l.l_extendedprice) / 7.0 as avg_yearly\n"
		          + "from\n"
		          + "  lineitem l,\n"
		          + "  part p\n"
		          + "where\n"
		          + "  p.p_partkey = l.l_partkey\n"
		          + "  and p.p_brand = 'Brand#13'\n"
		          + "  and p.p_container = 'JUMBO CAN'\n"
		          + "  and l.l_quantity < (\n"
		          + "    select\n"
		          + "      0.2 * avg(l2.l_quantity)\n"
		          + "    from\n"
		          + "      lineitem l2\n"
		          + "    where\n"
		          + "      l2.l_partkey = p.p_partkey\n"
		          + "  )",

		      // 18
		      "select\n"
		          + "  c.c_name,\n"
		          + "  c.c_custkey,\n"
		          + "  o.o_orderkey,\n"
		          + "  o.o_orderdate,\n"
		          + "  o.o_totalprice,\n"
		          + "  sum(l.l_quantity)\n"
		          + "from\n"
		          + "  customer c,\n"
		          + "  orders o,\n"
		          + "  lineitem l\n"
		          + "where\n"
		          + "  o.o_orderkey in (\n"
		          + "    select\n"
		          + "      l_orderkey\n"
		          + "    from\n"
		          + "      lineitem\n"
		          + "    group by\n"
		          + "      l_orderkey having\n"
		          + "        sum(l_quantity) > 313\n"
		          + "  )\n"
		          + "  and c.c_custkey = o.o_custkey\n"
		          + "  and o.o_orderkey = l.l_orderkey\n"
		          + "group by\n"
		          + "  c.c_name,\n"
		          + "  c.c_custkey,\n"
		          + "  o.o_orderkey,\n"
		          + "  o.o_orderdate,\n"
		          + "  o.o_totalprice\n"
		          + "order by\n"
		          + "  o.o_totalprice desc,\n"
		          + "  o.o_orderdate\n"
		          + "limit 100",

		      // 19
		      "select\n"
		          + "  sum(l.l_extendedprice* (1 - l.l_discount)) as revenue\n"
		          + "from\n"
		          + "  lineitem l,\n"
		          + "  part p\n"
		          + "where\n"
		          + "  (\n"
		          + "    p.p_partkey = l.l_partkey\n"
		          + "    and p.p_brand = 'Brand#41'\n"
		          + "    and p.p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')\n"
		          + "    and l.l_quantity >= 2 and l.l_quantity <= 2 + 10\n"
		          + "    and p.p_size between 1 and 5\n"
		          + "    and l.l_shipmode in ('AIR', 'AIR REG')\n"
		          + "    and l.l_shipinstruct = 'DELIVER IN PERSON'\n"
		          + "  )\n"
		          + "  or\n"
		          + "  (\n"
		          + "    p.p_partkey = l.l_partkey\n"
		          + "    and p.p_brand = 'Brand#13'\n"
		          + "    and p.p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')\n"
		          + "    and l.l_quantity >= 14 and l.l_quantity <= 14 + 10\n"
		          + "    and p.p_size between 1 and 10\n"
		          + "    and l.l_shipmode in ('AIR', 'AIR REG')\n"
		          + "    and l.l_shipinstruct = 'DELIVER IN PERSON'\n"
		          + "  )\n"
		          + "  or\n"
		          + "  (\n"
		          + "    p.p_partkey = l.l_partkey\n"
		          + "    and p.p_brand = 'Brand#55'\n"
		          + "    and p.p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')\n"
		          + "    and l.l_quantity >= 23 and l.l_quantity <= 23 + 10\n"
		          + "    and p.p_size between 1 and 15\n"
		          + "    and l.l_shipmode in ('AIR', 'AIR REG')\n"
		          + "    and l.l_shipinstruct = 'DELIVER IN PERSON'\n"
		          + "  )",

		      // 20
		      "select\n"
		          + "  s.s_name,\n"
		          + "  s.s_address\n"
		          + "from\n"
		          + "  supplier s,\n"
		          + "  nation n\n"
		          + "where\n"
		          + "  s.s_suppkey in (\n"
		          + "    select\n"
		          + "      ps.ps_suppkey\n"
		          + "    from\n"
		          + "      partsupp ps\n"
		          + "    where\n"
		          + "      ps. ps_partkey in (\n"
		          + "        select\n"
		          + "          p.p_partkey\n"
		          + "        from\n"
		          + "          part p\n"
		          + "        where\n"
		          + "          p.p_name like 'antique%'\n"
		          + "      )\n"
		          + "      and ps.ps_availqty > (\n"
		          + "        select\n"
		          + "          0.5 * sum(l.l_quantity)\n"
		          + "        from\n"
		          + "          lineitem l\n"
		          + "        where\n"
		          + "          l.l_partkey = ps.ps_partkey\n"
		          + "          and l.l_suppkey = ps.ps_suppkey\n"
		          + "          and l.l_shipdate >= date '1993-01-01'\n"
		          + "          and l.l_shipdate < date '1993-01-01' + interval '1' year\n"
		          + "      )\n"
		          + "  )\n"
		          + "  and s.s_nationkey = n.n_nationkey\n"
		          + "  and n.n_name = 'KENYA'\n"
		          + "order by\n"
		          + "  s.s_name",

		      // 21
		      "select\n"
		          + "  s.s_name,\n"
		          + "  count(*) as numwait\n"
		          + "from\n"
		          + "  supplier s,\n"
		          + "  lineitem l1,\n"
		          + "  orders o,\n"
		          + "  nation n\n"
		          + "where\n"
		          + "  s.s_suppkey = l1.l_suppkey\n"
		          + "  and o.o_orderkey = l1.l_orderkey\n"
		          + "  and o.o_orderstatus = 'F'\n"
		          + "  and l1.l_receiptdate > l1.l_commitdate\n"
		          + "  and exists (\n"
		          + "    select\n"
		          + "      *\n"
		          + "    from\n"
		          + "      lineitem l2\n"
		          + "    where\n"
		          + "      l2.l_orderkey = l1.l_orderkey\n"
		          + "      and l2.l_suppkey <> l1.l_suppkey\n"
		          + "  )\n"
		          + "  and not exists (\n"
		          + "    select\n"
		          + "      *\n"
		          + "    from\n"
		          + "      lineitem l3\n"
		          + "    where\n"
		          + "      l3.l_orderkey = l1.l_orderkey\n"
		          + "      and l3.l_suppkey <> l1.l_suppkey\n"
		          + "      and l3.l_receiptdate > l3.l_commitdate\n"
		          + "  )\n"
		          + "  and s.s_nationkey = n.n_nationkey\n"
		          + "  and n.n_name = 'BRAZIL'\n"
		          + "group by\n"
		          + "  s.s_name\n"
		          + "order by\n"
		          + "  numwait desc,\n"
		          + "  s.s_name\n"
		          + "limit 100",

		      // 22
		      "select\n"
		          + "  cntrycode,\n"
		          + "  count(*) as numcust,\n"
		          + "  sum(c_acctbal) as totacctbal\n"
		          + "from\n"
		          + "  (\n"
		          + "    select\n"
		          + "      substring(c_phone from 1 for 2) as cntrycode,\n"
		          + "      c_acctbal\n"
		          + "    from\n"
		          + "      customer c\n"
		          + "    where\n"
		          + "      substring(c_phone from 1 for 2) in\n"
		          + "        ('24', '31', '11', '16', '21', '20', '34')\n"
		          + "      and c_acctbal > (\n"
		          + "        select\n"
		          + "          avg(c_acctbal)\n"
		          + "        from\n"
		          + "          customer\n"
		          + "        where\n"
		          + "          c_acctbal > 0.00\n"
		          + "          and substring(c_phone from 1 for 2) in\n"
		          + "            ('24', '31', '11', '16', '21', '20', '34')\n"
		          + "      )\n"
		          + "      and not exists (\n"
		          + "        select\n"
		          + "          *\n"
		          + "        from\n"
		          + "          orders o\n"
		          + "        where\n"
		          + "          o.o_custkey = c.c_custkey\n"
		          + "      )\n"
		          + "  ) as custsale\n"
		          + "group by\n"
		          + "  cntrycode\n"
		          + "order by\n"
		          + "  cntrycode");

	
	  protected void setUp() throws Exception {
		    
		    String setupFile = Utilities.getSMCQLRoot() + "/conf/setup.tpch";
		    System.setProperty("smcql.setup", setupFile);
		 	logger = SystemConfiguration.getInstance().getLogger();
		 	parser = new SqlStatementParser();

			
	  }


}
