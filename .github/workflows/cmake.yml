name: C/C++ CI

on:
  push:
    branches: [ "emp-operators" ]
  pull_request:
    branches: [ "emp-operators" ]

jobs:
  build:
    runs-on: ubuntu-latest
      
    env: 
      working-directory: ${{github.workspace}}/src/main/cpp
    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      working-directory: ${{github.workspace}}
      run: |
          sudo apt-get -y update
          sudo apt-get -y install libboost-all-dev libgflags-dev postgresql postgresql-client
          wget https://raw.githubusercontent.com/emp-toolkit/emp-readme/master/scripts/install.py
          python install.py --deps --tool --ot --zk --sh2pc
          cd ..
          git clone --branch v1.13.0 https://github.com/google/googletest.git
          cd googletest
          cmake .
          make all
          sudo make install
          cd ..
          git clone --branch 7.7.4 https://github.com/jtv/libpqxx.git
          cd libpqxx
          ./configure  --disable-documentation --enable-shared CXXFLAGS="-std=c++17 -O2"
          make 
          sudo make install
    - name: configure cmake
      working-directory: ${{env.working-directory}}
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -Wno-dev
    - name: Setup DB
      working-directory: ${{github.workspace}}
      run: | 
          sudo chmod og+X /home /home/runner
          sudo systemctl start postgresql.service
          sudo -u postgres createuser -s vaultdb
          cat /etc/postgresql/*/main/pg_hba.conf
          sudo sed -i s/scram-sha-256/trust/g /etc/postgresql/*/main/pg_hba.conf
          cat /etc/postgresql/*/main/pg_hba.conf
    - name: Populate DB
      working-directory: ${{github.workspace}}
      run: bash conf/workload/tpch/generate-and-load-data.sh
      env:
        POSTGRES_HOST: 127.0.0.1
        POSTGRES_USER: vaultdb
        POSTGRES_PASSWORD: vaultdb
        POSTGRES_PORT: 5432
    - name: Build
      working-directory: ${{env.working-directory}}
      run: cmake --build build --config Release
    - name: Test
      working-directory: ${{env.working-directory}}
      run: ctest --test-dir build --output-on-failure
